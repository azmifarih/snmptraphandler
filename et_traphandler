#!/usr/bin/env python
import inspect
import subprocess
import os
import pickle
from pysnmp.entity.rfc3413.oneliner import cmdgen
import pyasn1.type.univ
from oid_def import oid_map, type_handlers
import sys,os
import datetime,time
from optparse import OptionParser, OptionGroup
from tt import *
import importlib

def err(s):
    sys.stderr.write("[ERROR] %s\n" % s)

if __name__ == '__main__':
    parser = OptionParser()
    parser.add_option("-H", "--hostname",
                    dest="hostname",
                    help="hostname to trap handle",
                    default=None)
    parser.add_option("-t", "--type",
                    dest="type",
                    help="device type to configure trap handle",
                    default=None)
    parser.add_option("-o", "--oid",
                    dest="oid",
                    help="OID to monitoring",
                    default=None)
    group = OptionGroup(parser, "Verbosity Option")
    group.add_option("-v", "--verbose",
                    action="store_true",
                    dest="verbose")
    group.add_option("-d", "--debug",
                    action="store_true",
                    help="Print debug information")
    parser.add_option_group(group)
    (options, args) = parser.parse_args()

    if options.hostname is None:
        parser.error("Option -H is compulsory")
    elif options.oid is None:
        parser.error("Option -o is compulsory")

    try:
        service = oid_map[options.oid]
        try:
            #dump_obj = getattr(sys.modules["tt.%s" % service],service)(options.oid, options.hostname,*sys.argv)
            #print(dump_obj)
	    #dump_obj.run([])
	    dump_class = getattr(sys.modules["tt.%s" % service],service)
	    dump_class(options.oid, options.hostname,*sys.argv).run([])
        except AttributeError, e:
            err("Class %s not found. Is it implemented?: %s" % (service,e.message))
    except KeyError, e:
        err("Key %s not found. " % (e.message))

